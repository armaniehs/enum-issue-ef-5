// <auto-generated />
using EnumIssue.PoxyEnum;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EnumIssue.Migrations
{
    [DbContext(typeof(PoxyEnumDbContext))]
    [Migration("20210402115924_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EnumIssue.PoxyEnum.ListItem", b =>
                {
                    b.Property<int>("ListTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ListTypeId", "Id");

                    b.ToTable("ListItem");
                });

            modelBuilder.Entity("EnumIssue.PoxyEnum.ListType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ListType");
                });

            modelBuilder.Entity("EnumIssue.PoxyEnum.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhaseId")
                        .HasColumnType("int");

                    b.Property<int>("PhaseListTypeId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("StatusListTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhaseListTypeId");

                    b.HasIndex("StatusListTypeId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("EnumIssue.PoxyEnum.ListItem", b =>
                {
                    b.HasOne("EnumIssue.PoxyEnum.ListType", "ListType")
                        .WithMany()
                        .HasForeignKey("ListTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ListType");
                });

            modelBuilder.Entity("EnumIssue.PoxyEnum.Project", b =>
                {
                    b.HasOne("EnumIssue.PoxyEnum.ListType", "PhaseListType")
                        .WithMany()
                        .HasForeignKey("PhaseListTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EnumIssue.PoxyEnum.ListType", "StatusListType")
                        .WithMany()
                        .HasForeignKey("StatusListTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PhaseListType");

                    b.Navigation("StatusListType");
                });
#pragma warning restore 612, 618
        }
    }
}
